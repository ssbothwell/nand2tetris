// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/04/Fill.asm

// Runs an infinite loop that listens to the keyboard input. 
// When a key is pressed (any key), the program blackens the screen,
// i.e. writes "black" in every pixel. When no key is pressed, the
// program clears the screen, i.e. writes "white" in every pixel.

// Put your code here.

// Instantiate Variables

// R0 == 255
@255
D=A
@R0
M=D

// n = R0
@0
D=M
@n
M=D

// n2 = 16
@32
D=A
@n2
M=D

// i = 0
@i
M=0 

// i2 = 2
@i2
M=0

// addr = 16384
@SCREEN
D=A
@addr
M=D 
    
// Main Program

// Keyboard Scan Loop
(KBD_LOOP)
@KBD
D=M
@LOOP
D;JGT // Jump to @LOOP if @KBD > 0

@KBD
D=M
@CLEAR
D;JEQ // Jump to @CLEAR if @KBD == 0

@KBD_LOOP
0;JMP // Repeat KBD_Loop
// End Keyboard Scan Loop

// Screen Fill Loop
(LOOP)
  @i
  D=M
  @n
  D=D-M
  @KBD_LOOP
  D;JGT // if i > n goto END

    // Nested Loop for Filling Columns
    //(LOOP2)
    //@i2
    //D=M
    //@n2
    //D=D-M
    //@END2
    //D;JGT // if i2 > n2 goto END2

    @addr
    A=M
    M=-1 // RAM[addr]= 1111111111111111
    
    //@2
    //D=A
    ////@i2
    ////D=M
    //@addr
    //A=M+D
    //M=-1 // RAM[addr+2]= 1111111111111111
    //
    //@1
    //D=A
    //@i2
    //M=M+D // Increase i2 by two
    
    //@LOOP2
    //0;JMP // Repeat LOOP2
    
    
  //(END2)
  @i2
  M=0
  
  @i
  M=M+1 // i = i + 1
  @32
  D=A
  @addr
  M=D+M // addr = addr + 32
  
  @LOOP
  0;JMP // goto LOOP
// End Screen Fill Loop

// Screen Clear
(CLEAR)
  @i
  D=M
  @n
  D=D-M
  @END
  D;JGT // if i > n goto END
  
  @addr
  A=M
  M=0 // RAM[addr]= 1111111111111111
  
  @32
  D=A
  @addr
  M=D+M // addr = addr + 32
  
  @KBD_LOOP
  0;JMP // Repeat KBD_Loop

// Program End loop
(END)
@END
0;JMP
